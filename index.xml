<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Visual Computing 2022-2</title><link>https://anfbalceroce.github.io/VisualComputing/</link><description>Recent content on Visual Computing 2022-2</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://anfbalceroce.github.io/VisualComputing/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://anfbalceroce.github.io/VisualComputing/docs/contenido/convolucion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anfbalceroce.github.io/VisualComputing/docs/contenido/convolucion/</guid><description>Convolución # &amp;lt;img hidden id=&amp;#34;uploaded-image&amp;#34; src=&amp;#34;&amp;#34;&amp;gt;&amp;lt;/img&amp;gt; &amp;lt;!--imagen subida, de ella se obtiene la representación binaria que luego es usada por el canvas para obtener la representación en RGBA --&amp;gt; &amp;lt;canvas hidden id=&amp;#34;canvas-for-rgba&amp;#34;&amp;gt;&amp;lt;/canvas&amp;gt; &amp;lt;!-- canvas solo para dibujar la imagen subida y obtener la representación en RGBA, por eso puede ser oculta --&amp;gt; &amp;lt;input type=&amp;#34;file&amp;#34; id=&amp;#34;image-input&amp;#34; accept=&amp;#34;image/jpeg, image/png, image/jpg&amp;#34;&amp;gt; &amp;lt;select id=&amp;#34;kernel-select&amp;#34;&amp;gt; &amp;lt;option selected value=&amp;#34;identity&amp;#34;&amp;gt;Identity&amp;lt;/option&amp;gt; &amp;lt;option value=&amp;#34;gaussian-blur&amp;#34;&amp;gt;Gaussian Blur&amp;lt;/option&amp;gt; &amp;lt;option value=&amp;#34;sharpen&amp;#34;&amp;gt;Sharpen&amp;lt;/option&amp;gt; &amp;lt;option value=&amp;#34;outline&amp;#34;&amp;gt;Outline&amp;lt;/option&amp;gt; &amp;lt;option value=&amp;#34;emboss&amp;#34;&amp;gt;Emboss&amp;lt;/option&amp;gt; &amp;lt;option value=&amp;#34;left-sobel&amp;#34;&amp;gt;Left Sobel&amp;lt;/option&amp;gt; &amp;lt;option value=&amp;#34;right-sobel&amp;#34;&amp;gt;Right Sobel&amp;lt;/option&amp;gt; &amp;lt;option value=&amp;#34;top-sobel&amp;#34;&amp;gt;Top Sobel&amp;lt;/option&amp;gt; &amp;lt;option value=&amp;#34;bottom-sobel&amp;#34;&amp;gt;Bottom Sobel&amp;lt;/option&amp;gt; &amp;lt;/select&amp;gt; &amp;lt;canvas id=&amp;#34;transformed-image-canvas&amp;#34;&amp;gt;&amp;lt;/canvas&amp;gt; &amp;lt;script&amp;gt; // función de procesamiento de la imagen function processImage(image, width, height) { let canvas = document.</description></item><item><title/><link>https://anfbalceroce.github.io/VisualComputing/docs/contenido/ilusiones/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anfbalceroce.github.io/VisualComputing/docs/contenido/ilusiones/</guid><description>Ilusiones # Aquí se presentan cada una de las ilusiones con sus respectivas explicaciones sobre cómo funcionan.
Steping Illusion # En esta ilusion se observan dos rectangulos de color amarillo y azul que se desplazan a lo largo de un patron de barras claras y oscuras. Cuando las condiciones de color y tamaño son adecuadas los rectangulos parecen moverse de manera intermitente, como si fueran pies caminando.
Cuando el pie amarillo tiene un brillo similar a las barras claras, y el pie azul un brillo similar a las barras oscuras (caso extremo cuando son del mismo color y suficiente contraste entre los claros y los oscuros) solo hay evidencia clara de movimiento cuando los extremos del rectangulo claro pasan sobre una barra oscura o los del rectangulo oscuro pasan sobre una barra clara, efectivamente la mitad del espacio.</description></item></channel></rss>